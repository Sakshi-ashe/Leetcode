/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<List<Integer>> levelOrder(TreeNode root) {
        
        Queue<TreeNode> queue = new LinkedList<TreeNode>();
        List<List<Integer>> bList = new ArrayList<List<Integer>>();
        
        if(root != null ) queue.add(root);
         
        while(queue.isEmpty() == false){
            int count = queue.size();
            List<Integer> jList = new ArrayList<Integer>();
            while(count > 0){
                TreeNode curr = queue.poll();
                jList.add(curr.val);
                
                if(curr.left != null){
                    queue.add(curr.left);
                }
                if(curr.right != null){
                    queue.add(curr.right);
                }
                
                count--;            
            }         
            bList.add(jList);
        }
        
        return bList;      
    }'
    
}
